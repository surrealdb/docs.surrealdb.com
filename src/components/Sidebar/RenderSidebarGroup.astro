---
import { cn } from '@src/util/tailwind';
import { Icon } from 'astro-icon/components';
import SidebarItem, {
    type SidebarItem as TSidebarItem,
} from './SidebarItem.astro';

export type Props = SidebarGroup;
export type SidebarGroup = {
    title: string;
    href: string;
    slug: string;
    isPage: boolean;
    items: TSidebarItem[];
};

const { title, href, isPage, items } = Astro.props;
const id = Array.from({ length: 8 }, () => Math.random().toString(36)[2]).join(
    ''
);
const active = Astro.url.pathname.startsWith(href);
---

<style>
	@reference "@src/styles/global.css";

    .flag-state:checked + label .flag-trigger {
        @apply rotate-90;
    }

    .flag-state:not(:checked) ~ .flag-content {
        @apply hidden;
    }
</style>

<div>
    <input type="checkbox" class="hidden flag-state" id={id} {...active ? { checked: true } : {}} />
    <label for={id} class={cn("flex items-center px-4 py-1.5 w-full cursor-pointer rounded-lg group hover:!bg-slate-600/10 hover:!text-slate-600 hover:dark:!text-slate-200", active && "!text-surreal-pink bg-surreal-pink/20")}>
        <a href={isPage ? href : undefined} class={"sidebar-link flex-grow text-sm group-hover:text-inherit !text-faint"}>
            {title}
        </a>
       <Icon name="fa6-solid:chevron-right" class="transition-all duration-100 flag-trigger cursor-pointer" tabindex={-1} />
    </label>
    <div class="flex flag-content flex-col border-l border-border ml-4 pl-2">
        {items?.map((item) => (
            <SidebarItem {...item} />
        ))}
    </div>
</div>
