---
interface Props {
    class?: string;
}

const { class: className } = Astro.props;
---

<markdown-container class:list={['flag-markdown block', className]}>
    <slot />
</markdown-container>

<script>
    class MarkdownContainer extends HTMLElement {
        connectedCallback() {
            const targets = this.querySelectorAll('.code-copy');
            for (const target of targets) {
                let code = target.parentElement?.querySelector('code');
                if (!code) {
                    target.remove();
                    continue;
                }

                const inner = code.querySelector('.code-container');
                if (inner) {
                    code = inner as HTMLElement;
                }

                target.addEventListener('click', () => {
                    navigator.clipboard.writeText(code.innerText);
                });
            }
        }
    }

    customElements.define('markdown-container', MarkdownContainer);
</script>
