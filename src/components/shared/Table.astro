---
interface Props {
    class?: string;
    headClass?: string;
    bodyClass?: string;
    rowClass?: string;
    cellClass?: string;
}

const {
    class: className = '',
    headClass = '',
    bodyClass = '',
    rowClass = '',
    cellClass = '',
    ...rest
} = Astro.props;
---

<responsive-table class="w-full overflow-x-auto">
  <table class:list={["min-w-full table-auto", className]} {...rest}>
    <slot />
  </table>
</responsive-table>

<style>
  @media (max-width: 640px) {
    responsive-table {
      display: block;
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
      -ms-overflow-style: -ms-autohiding-scrollbar;
    }
  }
  responsive-table table thead {
    display: none;
  }
</style>

<script>
  class ResponsiveTable extends HTMLElement {
    connectedCallback() {
      const headRow = this.querySelector('thead tr');
      const tbody = this.querySelector('tbody');

      if (headRow && tbody) {
        const headCells = Array.from(headRow.children);
        const bodyRows = Array.from(tbody.children);

        bodyRows.forEach(row => {
          const cells = Array.from(row.children);
          cells.forEach((cell, index) => {
            cell.setAttribute('data-label', headCells[index].textContent ?? '');
          });
        });
      }
    }
  }

  customElements.define('responsive-table', ResponsiveTable);
</script>