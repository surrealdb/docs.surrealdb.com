---
import type { Props as ImageProps } from '@components/Image.astro';
import Dropdown from '@src/components/Dropdown/Dropdown.astro';
import DropdownItem from '@src/components/Dropdown/DropdownItem.astro';
import { matchUrl } from '@src/util/helpers';
import { cn } from '@src/util/tailwind';
import { Icon } from 'astro-icon/components';

interface SubItem {
    title: string;
    icon?: ImageProps['src'];
    href?: string;
    external?: boolean;
}

interface Props {
    href: string | SubItem[];
}

const { href } = Astro.props;
const active =
    typeof href === 'string'
        ? matchUrl(Astro.url.pathname, href)
        : href.some(
              (item) => item.href && matchUrl(Astro.url.pathname, item.href)
          );
---

<style>
	.nav-chrevron {
		@apply transition-transform;
	}
	
    :global(.dropdown-toggle:checked) ~ :global(label) .nav-chrevron {
        @apply rotate-180;
    }
</style>

{typeof href === "string" ? (
	<a
		href={href}
		class={cn("text-sm text-faint px-3 py-4 relative flex items-center justify-center cursor-pointer rounded-lg rounded-b-none hover:bg-slate-600/10 hover:text-slate-600 hover:dark:text-slate-200", active && "text-surreal-pink hover:text-surreal-pink hover:dark:text-surreal-pink after:absolute after:border-surreal-pink after:w-full after:bottom-0 after:border-b-2")}
	>
		<slot />
	</a>
) : (
	<Dropdown dropdownClass="min-w-52" withHoverTrigger>
		<div
			class={cn("text-sm text-faint px-3 py-4 relative flex items-center justify-center cursor-pointer rounded-lg rounded-b-none hover:bg-slate-600/10 hover:text-slate-600 hover:dark:text-slate-200 select-none", active && "text-surreal-pink hover:text-surreal-pink hover:dark:text-surreal-pink after:absolute after:border-surreal-pink after:w-full after:bottom-0 after:border-b-2")}
			tabindex="0"
			role="button"
		>
			<slot />
			<Icon name="fa6-solid:chevron-down" class="nav-chrevron ml-2 size-2" />
		</div>
		<div slot="dropdown" class="flex flex-col gap-1">
			{href.map((item: SubItem) => (
				<DropdownItem
					title={item.title}
					icon={item.icon}
					href={item.href}
					external={item.external}
					active={!!item.href && matchUrl(Astro.url.pathname, item.href)}
				/>
			))}
		</div>
	</Dropdown>
)}