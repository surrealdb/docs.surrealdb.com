---
import EmbedImage from '@assets/img/image/example/embed.png';
import GraphImage from '@assets/img/image/example/graph.png';
import MachineLearningImage from '@assets/img/image/example/machine-learning.png';
import RelationalImage from '@assets/img/image/example/relational.png';
import SearchImage from '@assets/img/image/example/search.png';
import { examplePageConfig } from '@config/pages/example';
import Image from '@src/components/Image.astro';

const categoryImageMap: Record<string, ImageMetadata> = {
    applications: EmbedImage,
    'client libraries': GraphImage,
    'management interfaces': MachineLearningImage,
    'development tools': RelationalImage,
    'deployment tools': SearchImage,
    'docker images': EmbedImage,
    integrations: GraphImage,
    libraries: MachineLearningImage,
    'github actions': RelationalImage,
    'starter kits': SearchImage,
    tutorials: EmbedImage,
    videos: GraphImage,
    projects: MachineLearningImage,
};

const { categories, dataByCategory } = examplePageConfig;

// Flatten the data so that each item also records its category.
const allItems = categories.flatMap((category) => {
    const items = dataByCategory[category] ?? [];
    return items.map((item) => ({ ...item, category }));
});

const filterSections = [
    {
        title: 'Difficulty',
        key: 'difficulty',
        options: ['Beginner', 'Intermediate', 'Advanced'],
    },
    {
        title: 'Lesson Areas',
        key: 'lessonArea',
        options: [
            'AI',
            'Data Management',
            'Ingest',
            'Integrations',
            'Kai',
            'Python SDK',
            'Query Performance',
            'Real-time',
        ],
    },
    {
        title: 'Deployment Type',
        key: 'deploymentType',
        options: ['Shared-Tier', 'Standard'],
    },
];
---

<h1 class="text-3xl font-bold mb-4">Examples</h1>
<p class="text-gray-600 mb-8">
  Discover the magic of SurrealDB with our examples by your side. From beginner to expert, embark on a journey of exploration, learning, and collaboration.
</p>
<p class="text-gray-600 mb-6">
    In this page, you can find a list of the SurrealDB ecosystem, including client libraries, management interfaces, development tools, and more. Discover the tools and resources that can help you build, manage, and extend your SurrealDB applications.
  </p>
<hr class="border-b border-border my-8" role="separator" aria-orientation="horizontal" />
<div class="flex flex-col md:flex-row gap-8">

	<!-- Sidebar Filter -->
  	<aside class="w-full md:w-1/4 p-4 rounded top-4 h-fit">
		<h5 class="text-base mb-4 font-semibold">Filter by Category</h5>
		<div class="space-y-3 max-h-[70vh] overflow-y-auto">
      		{categories.map((cat) => (
        		<label class="flex items-center gap-2 cursor-pointer">
          			<input
          			  type="checkbox"
          			  class="filter-checkbox accent-[#ff0083] w-4 h-4 rounded border-gray-300"
          			  value={cat}
          			/>
          			<span class="text-base">{cat}</span>
        		</label>
      		))}
    	</div>
    	<hr class="my-4 border-[#232324]" />
	</aside>

    <!-- Grid of Links -->
    <main class="flex-1 p-6 grid grid-cols-1 gap-4 justify-center">
      {allItems.map((item) => (
          <div
			class="border border-border rounded-xl p-8 relative gradient-background-reversed overflow-hidden"
			>
				<div class="absolute right-0 top-0 w-40">
					<Image 
						class=""
						src={categoryImageMap[item.category.toLowerCase()] || EmbedImage.src}
						alt={item.description || item.text}	
					/>
				</div>
				<p class="pt-40 text-lg font-medium !mb-0.5">
					Graphs
				</p>
				<a class="!mt-0 !text-white text-2xl hover:!text-surreal-pink hover:!no-underline" role="heading" href={item.url} target="_blank">
					Vector Search with Kai
				</a>
				<hr role="separator" aria-orientation="horizontal" />
				<div class="grid grid-cols-[auto,1fr] grid-rows-2 gap-x-3 mt-4">
					<div class="size-8 row-span-1 rounded-3xl overflow-hidden">
						<Image
							src={EmbedImage}
							alt={item.platform || 'Platform'}
						/>
					</div>
					<h4 class="row-start-1 row-end-1 col-start-2 col-end-2 !mb-0 h-min !text-md">SurrealDB</h4>
					<p class="row-start-2 row-end-2 col-start-2 col-end-2 text-sm text-gray-500 !-mt-1 h-min font-thin">
						Engineering team
					</p>
				</div>
				<div class="flex flex-wrap gap-2 mt-4">
					<div class="bg-gradient-to-tl to-[#6F79884D] from-[#6F79881A] py-2 px-4 rounded-full text-xs text-gray-200/80">
						Intermediate
					</div>
					<div class="bg-gradient-to-tl to-[#6F79884D] from-[#6F79881A] py-2 px-4 rounded-full text-xs text-gray-200/80">
						Standard
					</div>
				</div>
		  </div>
        ))}
    </main>
      
  </div>

<!-- Vanilla JS to filter items based on checked checkboxes -->
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const checkboxes = document.querySelectorAll('.filter-checkbox');
    const gridItems = document.querySelectorAll('.grid-item');

    function updateGrid() {
      const selectedCategories = Array.from(checkboxes)
        .filter(cb => (cb as HTMLInputElement).checked)
        .map(cb => (cb as HTMLInputElement).value);

      const showAll = selectedCategories.length === 0;

      gridItems.forEach(item => {
        const itemCategory = item.getAttribute('data-category');
        if (showAll || (itemCategory && selectedCategories.includes(itemCategory))) {
          (item as HTMLElement).style.display = 'block';
        } else {
          (item as HTMLElement).style.display = 'none';
        }
      });
    }

    checkboxes.forEach(checkbox => {
      checkbox.addEventListener('change', updateGrid);
    });

    // Initial grid setup
    updateGrid();
  });
</script>